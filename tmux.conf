# --------------------------------------------------------- #
#   ________  _____  ___  __    __________  _   ________    #
#  /_  __/  |/  / / / / |/ /   / ____/ __ \/ | / / ____/    #
#   / / / /|_/ / / / /|   /   / /   / / / /  |/ / /_        #
#  / / / /  / / /_/ //   |   / /___/ /_/ / /|  / __/        #
# /_/ /_/  /_/\____//_/|_|   \____/\____/_/ |_/_/           #
# --------------------------------------------------------- #
# Creator: Eb
# Date created: Mon Jan 17 10:44:52 AM +03 2022
# Last update: 2024-07-05
# Version: 2.0
# --------------------------------------------------------- #
# Description:
#
# My TMUX configs
# --------------------------------------------------------- #

# TODO:
# - update servers with the tpm plugin manager
# - install zoxide on servers (ubuntu)
# - remove unused scripts from my servers

# ----------------- #
# General Settings  #
# ----------------- #

set -g history-limit 100000 # increase history size
set -s escape-time 0 # Faster command sequences
set -sg repeat-time 600 # Increase repeat timeout
set -g monitor-activity on

# enable mouse support in tmux
set -g mouse on

# Start window/pane numbering at 1 instead of 0
set -g base-index 1
set-window-option -g pane-base-index 1

# allow OSC52 to set the clipboard | https://github.com/laktak/extrakto/wiki/Remote-Copy-via-OSC52
# the copy to cliboard function of extrakto does not work for some reason both on local and remote
# https://github.com/tmux/tmux/wiki/Clipboard?utm_source=pocket_mylist
set -g set-clipboard on

# Automatically renumber windows
# set-option -g renumber-windows on

# sets the status keys to match emacs keybinds instead of vim
set-option -g status-keys "emacs"

# diplay proper colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# fix required for nvim?
set -s focus-events on

# fix for tmux and SSH forwarding agent
set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock

# slightly longer pane indicators display time
set -g display-panes-time 800

# slightly longer status messages display time
set -g display-time 1000

# redraw status line every 10 seconds
set -g status-interval 1

# Window name
set -g allow-rename on
set-window-option -g window-status-format "#W"
set-window-option -g window-status-current-format "#W"

# Behaviour when killing a session
set-option -g detach-on-destroy off

# ----------------- #
# Keybinds          #
# ----------------- #

# remap prefix key to ctrl+a
unbind C-b
set -g prefix C-a

# send prefix to a nested tmux session on a remote server.
bind-key -n C-b send-prefix

# ----------------- #
# Keybinds - Panes  #
# ----------------- #

# Splits (v and h are not bound by default, but we never know in the next versions)
unbind % # DEFAULT: Split vertically
unbind '"' # DEFAULT: Split horizontally
unbind v
unbind h
unbind z
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# navigate to another pane, -n means do not use any prefix
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Resize panes
bind-key -n C-Up resize-pane -U 5
bind-key -n C-Down resize-pane -D 5
bind-key -n C-Left resize-pane -L 5
bind-key -n C-Right resize-pane -R 5

# swap panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
bind-key s display-panes\; command-prompt -p "pane #:"  "swap-pane -t '%%'" # alernative way of swapping panes

# break pane
bind-key B break-pane -d

# join window
# bind j command-prompt -p "join pane from (Session Name:Pane Number): "  "join-pane -h -s '%%'"

# Alt-F11 toggles between zoomed (occupying the whole of the window) and unzoomed (its normal position in the layout)
bind-key -n M-F11 resize-pane -Z \;\
        set-option status\;

bind-key z resize-pane -Z \;\
    set-option status \;

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# to get this to work vim-tmux-navigator plugin for vim must be installed and configured
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Kills pane and skips the y/n prompt
bind-key x kill-pane

# ------------------ #
# Keybinds - Windows #
# ------------------ #

unbind w  # DEFAULT: change current window interactively
bind w run-shell tmlw

# Create new window and prompt to name the window
unbind n  # DEFAULT KEY: Move to next window
bind-key n command-prompt -p "Name of new window: " "new-window -c '#{pane_current_path}' -n '%%'"
# bind n new-window -c "#{pane_current_path}"

# Rename current window
unbind c # DEFAULT: create new window
bind-key c command-prompt -I "#{window_name}" "rename-window '%%'"

# Rename current session
bind C command-prompt -I "#{session_name}" "rename-session '%%'"

# Navigate between windows
bind -n M-j previous-window
bind -n M-k next-window

# Kill window
bind X kill-window

# NOTE: the below seems redundant, but keeping incase I change my mind in the future.
# Prompt to rename window right after it's created
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# NOTE: Not sure about this one yet.
# Choose choose-tree
# bind-key C-j choose-tree

# ----------------- #
# Keybinds - Custom #
# ----------------- #

# source the tmux file
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Config Reloaded!"
# toggle status bar
bind-key -r S set-option -g status

# NOTE: still not satisfied with this
# DISABLED FOR NOW
# scratchpad / popup
# bind -n M-g display-popup -b single -E -h 70% -w 60% "tmux new-session -A -s 'scratch'"
# bind -n M-g display-popup -E -h 70% -w 60% "tmux-git-popup-window"
# bind -n M-g display-popup -E -h 70% -w 60% "gh"
# bind -n M-g display-popup -t $TMUX_PANE -h 70% -w 60% "git status; gh"

# htop
bind-key T split-window -h "htop"

# nvim
# bind-key V split-window -h -c ~/ "nvim"
# bind-key C-v run-shell "if ! tmux-nvim; then exit 130; fi"
bind-key C-v run-shell "~/.local/bin/tmux-nvim"

# switch TMUX session
# bind-key a split-window -h "~/scripts/bash_scripts/tmux_scripts/tmux-fzf-switch.sh"
# bind-key a run-shell "~/.local/bin/tmss"

# Kill a tmux session
bind-key C-k run-shell "~/.local/bin/tmks"

# List current tmux sessions
# TODO:
# - [ ] pane information is not readable, need a solution to make this keybind
# more useful
bind-key C-l run-shell "~/.local/bin/tmux-quick-switch"

# kill TMUX session and stay in session
# bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#$")" || tmux kill-session'

# break out to new TMUX session
# BUG: the run-shell command will not work for some reason, need to look for a fix
# Disabling for now
# bind-key C-b send-keys "tmat && exit" "C-m"

# lists all text copied to teh tmux buffer in copy mode
bind b list-buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from

# Unbind find-window
unbind f

# Harpoon
# https://github.com/Chaitanyabsprip/tmux-harpoon
# TODO: look up the harpoon documentation for more ideas and possibly post an issue on the repo for the remove command
bind -n M-a run "harpoon -a && notify-send -t 1000 '' 'Added tmux mark'" # track current session using harpoon
bind -n M-t run "harpoon -l" # list tracked sessions with fzf
bind -n M-r run "harpoon -d tmux display-message -p '#S' && notify-send -t 1000 '' 'Deleted tmux mark'" # delete focused session from harpoon
bind -n M-e run "harpoon -e" # edit harpoon list
bind -n M-1 run "harpoon -s 1"  # jump to bookmark at index 1
bind -n M-2 run "harpoon -s 2"  # jump to bookmark at index 2
bind -n M-3 run "harpoon -s 3"  # jump to bookmark at index 3
bind -n M-4 run "harpoon -s 4"  # jump to bookmark at index 4
bind 1 run "harpoon -r 1 && '' 'Update index 1 with current session'"  # replace entry at index 1 with current session
bind 2 run "harpoon -r 2 && '' 'Update index 2 with current session'"  # replace entry at index 2 with current session
bind 3 run "harpoon -r 3 && '' 'Update index 3 with current session'"  # replace entry at index 3 with current session
bind 4 run "harpoon -r 4 && '' 'Update index 4 with current session'"  # replace entry at index 4 with current session

# Sesh
# https://github.com/joshmedeski/sesh
bind-key "f" run-shell "sesh connect \"$(
	sesh list -t | fzf-tmux -p 60%,50% \
		--no-sort --ansi --border-label ' sesh ' --prompt '  ' \
		--header '  ^t tmux  ^x zoxide  ^d kill  ^f find  ^g configs ' \
        --color border:#7DAEA3 \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-t:change-prompt(  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(  )+reload(sesh list)'
)\""

bind-key "k" display-popup -E -w 60% "sesh connect \"$(
	sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --height 50 --prompt='⚡'
)\""

# ----------------- #
# Copy Mode         #
# ----------------- #

# copy mode in tmux, use VIM keys in tmux
set-window-option -g mode-keys vi

#settings to copy contents to system clipboard instead of tmux clipboard
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# new binding to enter vi-mode
unbind [
bind e copy-mode

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection

# ----------------- #
# Theme             #
# ----------------- #

# SOURCE: https://github.com/arunh/tmux-gruvbox-material
# Original theme sourced from here

# Colors:
color_bg='#282828'
color_bg2='#a89984'
color_bg3='#3c3836'
color_bg4='#5b534d'
color_bg5='#32302f'
color_fg='#ddc7a1'
color_fg2='#a89984'
color_red='#ea6962'
color_orange='#e78a4e'
color_yellow='#d8a657'
color_green='#a9b665'
color_aqua='#89b482'
color_bright_green='#89b482'
color_blue='#7daea3'
color_purple='#d3869b'

# Theme contract variables
dark_bg="$color_bg"
dark_bg2="$color_bg5"
dark_bg3="$color_bg3"
dark_bg4="$color_bg4"
light_bg2="$color_bg2"
text_on_light_bg="$color_bg"
text_on_dark_bg="$color_fg"
text_on_dark_bg2="$color_fg2"
active_window_bg="$color_aqua"
active_window_fg_focus="$color_orange"
color_status_text="$dark_bg3"
color_window_off_status_bg="$dark_bg3"

# General settings for bar
set -g status "on"
set -g status-justify "left"
set -g status-position "bottom"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-separator ""

# Status line style
set -g status-style "fg=$text_on_dark_bg2,bg=$dark_bg2"

# Command line style
set -g message-style "fg=$text_on_dark_bg2,bg=$dark_bg2"

# Pane
set -g pane-active-border-style "fg=$color_blue"
set -g pane-border-style "fg=$color_bg4"
# TODO:
# experiment with window-style & window-active-style bg colors
# https://youtu.be/-l9fXyqgh1Y

# Window status
setw -g window-status-activity-style "none"
setw -g window-status-format " #I:#W "
setw -g window-status-current-format " #I:#W "
# set -g window-status-current-style "fg=$text_on_light_bg,bg=$active_window_bg"
set -g window-status-current-style "fg=$color_blue,bg=$dark_bg2, bold"

# Status left
set -g status-left-style "none"
set -g status-left "#{?client_prefix,#[bg=$color_green]#[fg=$text_on_light_bg],} #S "

# Status Right
set -g status-right-style "none"
# right_column_1="#[fg=$text_on_dark_bg,bg=$dark_bg2, nobold] #(gitmux -cfg $HOME/.config/tmux/.gitmux.conf #{pane_current_path})"
right_column_3="#[fg=$color_aqua,bg=$dark_bg2, nobold] #h #(tmux-ip)"
right_column_2="#[fg=$text_on_dark_bg,bg=$dark_bg2, nobold] #(tmux-battery)"
right_column_4="#[fg=$text_on_dark_bg2,bg=$dark_bg2, nobold] #(tmux-date)"
right_column_5="#[fg=$color_aqua,bg=$dark_bg2, nobold] #(tmux-diskfree)"
set -g status-right " ${right_column_1} ${right_column_2} ${right_column_4}${right_column_3} "

# ------------------------------------ #
# Nesting Local & Remote tmux sessions #
# ------------------------------------ #

# NOTE: below tasks are completed but keeping them here for future reference
# SOUCE: https://github.com/samoshkin/tmux-config/tree/master#nested-tmux-sessions
# - [x] The remote conf is working as intended.
# - [x] The f12 toggle to swap between local and remote
# - [x] need to work on swapping the colors based on whether workign on remote or local
# - [x] apart from colors, mayb add another indicator as well that the status bar is turned off

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.config/tmux/tmux.remote.conf'

# Toggle for switching control between local and remote, this section also has visual changes when the F12 key is pressed.
# By default it also hides the status bar. To change this behaviour comment out the <set-option status>
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text, bg=$color_window_off_status_bg"\;\
    set window-status-current-format "#[fg=$color_red, bold] OFF"\;\
    set window-status-current-style "fg=$color_status_text, bg=$color_window_off_status_bg"\;\
    set status-left "#[bg=$color_window_off_status_bg]"\;\
    set status-right "${right_column_4}"\;\
    set-option status\;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\

bind -T off F12 \
    set -u prefix \;\
    set -u key-table \;\
    set -u status-style \;\
    set -u window-status-current-format\;\
    set -u window-status-current-style\;\
    set -u status-left\;\
    set -u status-right\;\
    set-option -u status\;\

# ------------ #
# Tmux Plugins #
# ------------ #

# TMUX Resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
# NOTE: restore vim and neovim sessions
# Source - https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
set -g @resurrect-strategy-nvim 'session'
# NOTE: restore pane contents
set -g @resurrect-capture-pane-contents 'on'
set -g @resurect-processes 'nvim zsh htop'
# NOTE:
# SOURCE: https://discourse.nixos.org/t/how-to-get-tmux-resurrect-to-restore-neovim-sessions/30819
# resurrecting nvim sessions does not work without the below:
resurrect_dir="$HOME/.tmux/tmux-resurrect-sessions"
set -g @resurrect-dir $resurrect_dir
set -g @resurrect-hook-post-save-all 'target=$(readlink -f $resurrect_dir/last); sed "s| --cmd .*-vim-pack-dir||g; s|/etc/profiles/per-user/$USER/bin/||g; s|/home/$USER/.nix-profile/bin/||g" $target | sponge $target'

# TMUX Continuum
# https://github.com/tmux-plugins/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '15'

# t-smart-tmux-session-manager
# https://github.com/joshmedeski/t-smart-tmux-session-manager
# set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
# set -g @t-fzf-prompt '  '
# set -g @t-bind 'none' # unbind default keybind for tmux session manager
# set -g @t-bind 'f'
# # https://github.com/joshmedeski/t-smart-tmux-session-manager#change-default-fzf-results
# set -g @t-fzf-default-results 'sessions' # make session view default
# # https://github.com/joshmedeski/t-smart-tmux-session-manager#custom-find-command
# set -g @t-fzf-find-binding \
#     'ctrl-f:change-prompt(  )+reload(fd \
#             --hidden \
#             --max-depth=5 \
#             --type=d \
#             --exclude='.git/' --exclude='node_modules' . /home/)'

# TMUX-thumbs
# https://github.com/fcsonline/tmux-thumbs
set -g @plugin 'fcsonline/tmux-thumbs'
run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux
set -g @thumbs-alphabet qwerty

# TMUX-FZF-URL
# https://github.com/wfxr/tmux-fzf-url
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @fzf-url-bind 'o'

# tmux-transient-status
# https://github.com/TheSast/tmux-transient-status
# NOTE: This tmux tpm plugin makes your status bar appear only after the <prefix> 
# key is pressed (and for a small amout of time thereafter).
# TODO:
# - [ ] add this plugin to my servers
# - [ ] add this plugin to my desktop
set -g @plugin 'thesast/tmux-transient-status'
set -g @transient-status-delay '0'
set -g @transient-status-stall '2'

# TPM Plugin manager
# NOTE: Set this to change install directory for plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

# automatic tpm installation
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# This must be at the bottom of the script to work
run '~/.tmux/plugins/tpm/tpm'
